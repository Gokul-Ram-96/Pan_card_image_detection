# -*- coding: utf-8 -*-
"""Pan card image detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t3Pu8RZe72L0A_V5hTezATKmaP6EBgNt
"""

# clone darknet repo
!git clone https://github.com/AlexeyAB/darknet

# Commented out IPython magic to ensure Python compatibility.
# change makefile to have GPU and OPENCV enabled
# %cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile

from google.colab import drive
drive.mount('/content/drive')

# verify CUDA
!/usr/local/cuda/bin/nvcc --version

# make darknet (build)
!make

# Commented out IPython magic to ensure Python compatibility.
# define helper functions
def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
#   %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()

# use this to upload files
def upload():
  from google.colab import files
  uploaded = files.upload() 
  for name, data in uploaded.items():
    with open(name, 'wb') as f:
      f.write(data)
      print ('saved file', name)

# use this to download a file  
def download(path):
  from google.colab import files
  files.download(path)

# Commented out IPython magic to ensure Python compatibility.
# %cd ..
from google.colab import drive
drive.mount('/content/gdrive')

# this creates a symbolic link so that now the path /content/gdrive/My\ Drive/ is equal to /mydrive
!ln -s /content/gdrive/My\ Drive/ /mydrive
!ls /mydrive

# this is where my zip is stored (I created a yolov3 folder where I will get my required files from)
!ls /mydrive/yolov3_group_01

# Commented out IPython magic to ensure Python compatibility.
# copy the .zip file into the root directory of cloud VM
# %cd darknet
#%pwd
!cp /mydrive/yolov3_group_01/obj.zip ../

# unzip the zip file and its contents should now be in /darknet/data/obj
!unzip ../obj.zip -d /content/darknet/data/

# upload the custom .cfg back to cloud VM from Google Drive
!cp /mydrive/yolov3_group_01/yolov3_custom.cfg ./cfg

# upload the obj.names and obj.data files to cloud VM from Google Drive
!cp /mydrive/yolov3_group_01//obj.names ./data
!cp /mydrive/yolov3_group_01//obj.data  ./data

# upload the generate_train.py script to cloud VM from Google Drive
!cp /mydrive/yolov3_group_01/generate_train.py ./

!python generate_train.py

# verify train.txt can be seen in our darknet/data folder
!ls data/

# upload pretrained convolutional layer weights
!wget http://pjreddie.com/media/files/darknet53.conv.74

# train your custom detector
!./darknet detector train data/obj.data cfg/yolov3_custom.cfg darknet53.conv.74 -dont_show

imShow('chart.png')

#use this only to resume training from last learned weights
!./darknet detector train data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3_group_01/backup/yolov3_custom_last.weights -dont_show

imShow('chart.png')

#use this only to resume training from last learned weights
!./darknet detector map data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3_group_01/backup/yolov3_custom_12000.weights -dont_show

# Commented out IPython magic to ensure Python compatibility.
# need to set our custom cfg to test mode 
# %cd cfg
!sed -i 's/batch=64/batch=1/' yolov3_custom.cfg
!sed -i 's/subdivisions=16/subdivisions=1/' yolov3_custom.cfg
# %cd ..

# run your custom detector with this command (upload an image to your google drive to test, thresh flag sets accuracy that detection must be in order to show it)
!./darknet detector test data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3_group_01/backup/yolov3_custom_last.weights /mydrive/images/safari.jpg -thresh 0.3
imShow('predictions.jpg')

# this is where my zip is stored (I created a yolov3 folder where I will get my required files from)
!ls /mydrive/yolov3

# Commented out IPython magic to ensure Python compatibility.
# copy the .zip file into the root directory of cloud VM
# %cd darknet
#%pwd
!cp /mydrive/yolov3/test.zip ../

# unzip the zip file and its contents should now be in /darknet/data/test
!unzip ../test.zip -d /content/darknet/data/

# upload the generate_test.py script to cloud VM from Google Drive
!cp /mydrive/yolov3/generate_test.py ./

!python generate_test.py

# verify test.txt can be seen in our darknet/data folder
!ls data/

